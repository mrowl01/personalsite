import React, { Component } from 'react';

class Glitch extends Component {
	render(){
		return(
		<div className = 'sections tc' >
			<h1>Glitch Garden</h1>
			<hr/>
			<img  src='https://i.postimg.cc/hG6dm59F/glitchs.png'></img>
			<h2>Tech Stack </h2>
			Unity3D & C#
			<h2> Decription</h2>
			This game was made with the free assets provided by Glitch.com. It is based on zombies vs plants. The characters are animated for attacking and walking.
			The fox and lizard are the enemies. The fox can jump over your tombstone barrier and the lizard can walk fast.
			It is grid based game to make it easier to navigate. The player is able to instantiate a character at the cost of points. This character is meant to defend from the eneimes getting past his defences.
			The characters are generated by probability. The more levels are completed the higher probability of enemies spawning. 
			The player can click on an area of the grid and it will not instantiate another character ontop because only the layer below an already instantiated object is clickable.
			Since that character is blocking him from interacting with the layer below it (since it is in a higher layer) it is unable to double instantiate in a single space.
			As long as the collider of the instantited object is of the same length and height of the grid cube (which it is). This is how I got over that worry. If a player puts down a trophy it will rejuvinate their points so they can place more barriers to protect against the enemies.
			The way to win this game is by outlasting the timer. 
			<h2>Youtube Demo</h2>
			<a href= 'https://www.youtube.com/watch?v=OiG2Wu0Fh-c&t=95s'>
			https://www.youtube.com/watch?v=OiG2Wu0Fh-c&t=95s
			</a>
			<h2>GitHub</h2>
			<a href='https://github.com/mrowl01/GlitchGarden'>
			https://github.com/mrowl01/GlitchGarden
			</a>
		</div>
		)
	}
}

export default Glitch;